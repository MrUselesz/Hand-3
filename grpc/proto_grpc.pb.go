// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// ITUDatabaseClient is the client API for ITUDatabase service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ITUDatabaseClient interface {
	SendRecieve(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*ServerMessage, error)
}

type iTUDatabaseClient struct {
	cc grpc.ClientConnInterface
}

func NewITUDatabaseClient(cc grpc.ClientConnInterface) ITUDatabaseClient {
	return &iTUDatabaseClient{cc}
}

func (c *iTUDatabaseClient) SendRecieve(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*ServerMessage, error) {
	out := new(ServerMessage)
	err := c.cc.Invoke(ctx, "/ITUDatabase/SendRecieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ITUDatabaseServer is the server API for ITUDatabase service.
// All implementations must embed UnimplementedITUDatabaseServer
// for forward compatibility
type ITUDatabaseServer interface {
	SendRecieve(context.Context, *ClientMessage) (*ServerMessage, error)
	mustEmbedUnimplementedITUDatabaseServer()
}

// UnimplementedITUDatabaseServer must be embedded to have forward compatible implementations.
type UnimplementedITUDatabaseServer struct {
}

func (UnimplementedITUDatabaseServer) SendRecieve(context.Context, *ClientMessage) (*ServerMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRecieve not implemented")
}
func (UnimplementedITUDatabaseServer) mustEmbedUnimplementedITUDatabaseServer() {}

// UnsafeITUDatabaseServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ITUDatabaseServer will
// result in compilation errors.
type UnsafeITUDatabaseServer interface {
	mustEmbedUnimplementedITUDatabaseServer()
}

func RegisterITUDatabaseServer(s *grpc.Server, srv ITUDatabaseServer) {
	s.RegisterService(&_ITUDatabase_serviceDesc, srv)
}

func _ITUDatabase_SendRecieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITUDatabaseServer).SendRecieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ITUDatabase/SendRecieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITUDatabaseServer).SendRecieve(ctx, req.(*ClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ITUDatabase_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ITUDatabase",
	HandlerType: (*ITUDatabaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRecieve",
			Handler:    _ITUDatabase_SendRecieve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto.proto",
}
